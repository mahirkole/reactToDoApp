{"version":3,"sources":["logo.svg","components/AddToDo.js","components/ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AddToDo","state","id","title","status","handleIdChange","event","setState","target","value","handleTitleChange","handleStatusChange","handleSubmit","preventDefault","props","onAdd","render","onSubmit","className","placeholder","onChange","type","Component","ToDoList","todos","deleteToDo","todo","filteredItems","filter","x","editToDo","map","addToDo","key","style","color","onClick","icon","library","add","faTrash","faEdit","faPlus","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1514bf5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\n\r\nexport default class AddToDo extends Component {\r\n\t\r\n\tstate = {\r\n\t\tid: \"\",\r\n\t\ttitle: \"\",\r\n\t\tstatus: \"Pending\"\r\n\t}\r\n\r\n\thandleIdChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tid: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleTitleChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\ttitle: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleStatusChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tstatus: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tthis.props.onAdd({\r\n\t\t\tid: this.state.id,\r\n\t\t\ttitle: this.state.title,\r\n\t\t\tstatus: this.state.status\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tid: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\tstatus: \"Pending\"\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>Add To-Do</h3>\r\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input value={this.state.id} className=\"form-control\" placeholder=\"Enter ID\" onChange={this.handleIdChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input value={this.state.title} className=\"form-control\" placeholder=\"Enter Title\" onChange={this.handleTitleChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<select value={this.state.status} className=\"form-control\" placeholder=\"Enter Status\" onChange={this.handleStatusChange} >\r\n\t\t\t\t\t\t\t\t<option value=\"Done\">Done</option>\r\n\t\t\t\t\t\t\t\t<option value=\"Pending\">Pending</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"form-control btn btn-primary\">Add To-Do</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\r\n}","import React, {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nimport AddToDo from './AddToDo';\r\n\r\nexport default class ToDoList extends Component {\r\n\r\n\tstate = {\r\n\t\ttodos: [\r\n\t\t\t{id: '1', title: 'Push your code to github.', status: 'Done'},\r\n\t\t\t{id: '2', title: 'Email to your manager.', status: 'Pending'}\r\n\t\t]\r\n\t}\r\n\r\n\tdeleteToDo = (todo) => {\r\n\t\tconst filteredItems = this.state.todos.filter(x => x.id !== todo.id)\r\n\r\n\t\tthis.setState({\r\n\t\t\ttodos: filteredItems\r\n\t\t});\r\n\t};\r\n\r\n\teditToDo = (todo) => {\r\n\t\tthis.setState(state => ({\r\n\t\t\ttodos: state.todos.map(x => {\r\n\t\t\t\tif(x.id === todo.id) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...x,\r\n\t\t\t\t\t\tstatus: x.status === \"Done\" ? \"Pending\" : \"Done\"\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn x;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}))\r\n\t}\r\n\r\n\taddToDo = (todo) => {\r\n\t\tthis.setState({\r\n\t\t\ttodos: [...this.state.todos, todo]\r\n\t\t});\r\n\t}\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<AddToDo onAdd={this.addToDo}></AddToDo>\r\n\t\t\t\t\t<h1>ToDoList</h1>\r\n\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>id</th>\r\n\t\t\t\t\t\t\t\t<th>Title</th>\r\n\t\t\t\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\r\n\t\t\t\t\t\t\t{this.state.todos.map(x => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr key = {x.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{x.id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{x.title}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td style={{color: x.status === \"Done\" ? \"green\" : \"red\"}}>{x.status}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className = \"btn btn-primary\" onClick={() => this.deleteToDo(x)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"trash\"></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className = \"btn btn-primary\" onClick={() => this.editToDo(x)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"edit\"></FontAwesomeIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport ToDoList from './components/ToDoList';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash, faPlus, faEdit} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash, faEdit, faPlus);\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ToDoList></ToDoList>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}